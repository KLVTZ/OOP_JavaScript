function Person(n){this.name=n,this.sayName=function(){console.log(this.name)}}function DefinePerson(n){Object.defineProperty(this,"name",{get:function(){return n},set:function(e){n=e},enumerable:!0,configurable:!0}),this.sayName=function(){console.log(this.name)}}function hasPrototypeProperty(n,e){return e in n&&!n.hasOwnProperty(e)}function PersonLiteral(n){this.name=n}var person1=new Person("Justin");person1.sayName();var person2=new Person,__Person=function(n){this.name=n};__Person.prototype.sayName=function(){console.log(this.name)},PersonLiteral.prototype={constructor:PersonLiteral,sayName:function(){console.log(this.name)},toString:function(){return"[Person "+this.name+"]"}},PersonLiteral.prototype.sayHi=function(){console.log("Hi")},Array.prototype.sum=function(){return this.reduce(function(n,e){return n+e})},String.prototype.capitalize=function(){return this.charAt(0).toUpperCase()+this.substring(1)};